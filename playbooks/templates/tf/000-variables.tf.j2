########################################
# THIS FILE IS AUTOMATICALLY GENERATED #
########################################

resource "random_pet" "pet_name" {
  length = 2
}

variable "image" {
  type    = string
  description = "The short name  of the Glance image to use for the server."
}

variable "external_network" {
  type    = map(string)
  description = "The NAME and UUID of an External Provider Network for Floating IPs (dict)."
}

variable "osd_volume_size" {
  type    = number
  description = "Default volume size for Ceph OSDs"
  default = {{ mnaio_deployment.ceph.osd_size }}
}

variable "dns_ip" {
  type    = list(string)
  default = ["1.1.1.1", "1.0.0.1"]
}

variable "internal_lb_vip_address" {
  type    = string
  default = "{{ internal_lb_vip_address }}"
}

variable "external_lb_vip_address" {
  type    = string
  default = "{{ external_lb_vip_address }}"
}

variable "network_management" {
  type = map(string)
  default = {
    subnet_name = "subnet-mnaio-management"
    cidr        = "{{ network_management_cidr }}"
  }
}

variable "network_container" {
  type = map(string)
  default = {
    subnet_name = "subnet-mnaio-container"
    cidr        = "{{ network_container_cidr }}"
  }
}

variable "network_overlay" {
  type = map(string)
  default = {
    subnet_name = "subnet-mnaio-overlay"
    cidr        = "{{ network_overlay_cidr }}"
  }
}

variable "network_storage" {
  type = map(string)
  default = {
    subnet_name = "subnet-mnaio-storage"
    cidr        = "{{ network_storage_cidr }}"
  }
}

variable "network_replication" {
  type = map(string)
  default = {
    subnet_name = "subnet-mnaio-replication"
    cidr        = "{{ network_replication_cidr }}"
  }
}

variable "network_provider" {
  type = map(string)
  default = {
    subnet_name = "subnet-mnaio-provider"
    cidr        = "{{ network_provider_cidr }}"
  }
}

variable "management_router" {
  type = map(string)
  default = {
    name        = "mnaio-mgmt-router"
  }
}

variable "overcloud_router" {
  type = map(string)
  default = {
    name        = "mnaio-overcloud-router"
  }
}

############################################################################################
############################################################################################

locals {
  deployer_nodes = {
    {% for count in range(1, mnaio_deployment.deployer.count+1) %}
    mnaio-deploy{{ count }} = { mgmt_addr = "10.240.0.5{{ count }}", container_addr = "172.29.236.5{{ count }}" }
    {% endfor %}
  }
}

locals {
 controller_nodes = {
    {% for count in range(1, mnaio_deployment.controller.count+1) %}
    mnaio-controller{{ count }} = { mgmt_addr = "10.240.0.2{{ count }}", container_addr = "172.29.236.2{{ count }}", overlay_addr = "172.29.240.2{{ count }}",
                          storage_addr = "172.29.244.2{{ count }}", provider_addr = "10.239.3.2{{ count }}" }{{ "," if not loop.last }}
    {% endfor %}
  }
}

locals {
  compute_nodes = {
    {% for count in range(1, mnaio_deployment.controller.count+1) %}
    mnaio-compute{{ count }} = { mgmt_addr = "10.240.0.3{{ count }}", container_addr = "172.29.236.3{{ count }}", overlay_addr = "172.29.240.3{{ count }}",
                       storage_addr = "172.29.244.3{{ count }}", provider_addr = "10.239.3.3{{ count }}" }{{ "," if not loop.last }}
    {% endfor %}
  }
}

locals {
  loadbalancer_nodes = {
    {% for count in range(1, mnaio_deployment.loadbalancer.count+1) %}
    mnaio-loadbalancer{{ count }} = { mgmt_addr = "10.240.0.4{{ count }}", container_addr = "172.29.236.4{{ count }}" }{{ "," if not loop.last }}
    {% endfor %}
  }
}

locals {
  ceph_nodes = {
    {% for count in range(1, mnaio_deployment.ceph.count+1) %}
    mnaio-ceph1 = { mgmt_addr = "10.240.0.6{{ count }}", container_addr = "172.29.236.6{{ count }}", 
                    storage_addr = "172.29.244.6{{ count }}", replication_addr = "172.29.252.6{{ count }}" }{{ "," if not loop.last }}
    {% endfor %}
  }
}
